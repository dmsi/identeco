name: Deploy identeco
description: Deploys identeco on AWS
inputs:
  stage:
    description: Stage to deploy (dev, prod, test, ...)
    required: true
    default: prod
  aws-access-key-id:
    description: AWS access key ID
    required: true
  aws-secret-access-key:
    description: AWS secret access key
    required: true
outputs:
  api-id:
    description: 'AWS API Gateway ID'
    value: ${{ steps.api-id.outputs.api-id }}
runs:
  using: composite
  steps:
    #- run: npm ci
    #  shell: bash

    # TODO test without special action
    #- name: Remove profile from serverless.yml
    #  uses: mikefarah/yq@master
    #  with:
    #    cmd: |
    #      yq -i 'del(.provider.profile)' serverless.yml
    #      echo "::set-output name=aws-region::$(yq '.provider.region' serverless.yml)"
    #
    - name: Remove profile from serverless.yml
      id: yq
      run: |
        yq -i 'del(.provider.profile)' serverless.yml
        echo "::set-output name=aws-region::$(yq '.provider.region' serverless.yml)"
      shell: bash

    #- name: serverless deploy
    #  uses: serverless/github-action@v3
    #  with:
    #    args: deploy --stage ${{ inputs.stage }}
    #  env:
    #    AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
    #    AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}

    #- name: Rotate keys
    #  uses: serverless/github-action@v3
    #  with:
    #    args: invoke --stage ${{ inputs.stage }} -f rotateKeys
    #  env:
    #    AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
    #    AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}

    # DEBUG
    - run: |
        aws --region eu-west-1 cloudformation list-stack-resources       \
            --stack-name identeco-${{ inputs.stage }}  \
            --output json                              \
            --query 'StackResourceSummaries[?LogicalResourceId==`ApiGatewayRestApi`].PhysicalResourceId | [0]'
        echo "--- REGION:  ${{ steps.yq.outputs.aws-region }}"
        echo "+++ REGION:" $(yq '.provider.region' serverless.yml)
      shell: bash
      env: 
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}

    - id: api-id
      run: |
        API_ID=$(aws --region eu-west-1 cloudformation list-stack-resources       \
                    --stack-name identeco-${{ inputs.stage }}  \
                    --output json                              \
                    --query 'StackResourceSummaries[?LogicalResourceId==`ApiGatewayRestApi`].PhysicalResourceId | [0]')
        echo "::set-output name=api-id::$(echo ${API_ID//\"/})"
      shell: bash
      env: 
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
